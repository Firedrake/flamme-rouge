#! /usr/bin/perl

use strict;
use warnings;

use YAML::XS qw(LoadFile DumpFile);
use List::Util qw(min max);

my $scale=16;

my $yf=$ARGV[0] || '';
if ($yf eq '') {
  opendir D,'.';
  my @yf=sort grep /\.ya?ml$/,readdir D;
  closedir D;
  $yf=$yf[-1];
}
my $y=LoadFile($yf) or die "no $yf";

my @log;

foreach my $p (keys %{$y->{players}}) {
  my $colour=$y->{players}{$p}{colourname};
  foreach my $ri (0..$#{$y->{players}{$p}{riders}}) {
    my $rider=$y->{players}{$p}{riders}[$ri];
    my $rn="$colour $rider->{type}";
    my @rlog;
    if (exists $rider->{location}) {
      die "Some riders are still racing.\n";
    }
    my $x1=scalar grep /X/,(@{$rider->{discard}},@{$rider->{deck}});
    my $x2=int(($x1+1)/2);
    if ($x1>0) {
      push @rlog,"Exhaustion $x1 becomes $x2";
    }
    $rider->{exhaustion}=$x2;
    delete $rider->{deck};
    delete $rider->{discard};
    if (@rlog) {
      push @log,map {"$rn $_"} @rlog;
    }
  }
}

delete $y->{course};
delete $y->{startmap};
delete $y->{mountains};
delete $y->{weather};

DumpFile(newname($yf,2),$y);

print map {"$_\n"} @log;

sub newname {
  my $oldname=shift;
  my $offset=shift || 0;
  my @p=reverse split /\./,$oldname;
  my $t;
  foreach my $i (0..$#p) {
    if ($p[$i] =~ /^[0-9]+$/) {
      if ($offset) {
        $offset--;
      } else {
        $t=$i;
        last;
      }
    }
  }
  if (defined $t) {
    $p[$t]=sprintf('%0'.length($p[$t]).'d',$p[$t]+1);
    map {if ($p[$_] =~ /^[0-9]+$/) {$p[$_]=sprintf('%0'.length($p[$_]).'d',0)}} (0..$t-1);
  } else {
    splice @p,1,0,'new';
  }
  return join('.',reverse @p);
}
